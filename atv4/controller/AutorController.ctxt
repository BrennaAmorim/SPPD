#BlueJ class context
comment0.target=AutorController
comment0.text=\r\n\ Controlador\ para\ a\ entidade\ Autor,\ gerenciando\ a\ intera\u00E7\u00E3o\ com\ a\ interface\ gr\u00E1fica\r\n\ e\ as\ opera\u00E7\u00F5es\ CRUD\ para\ Autores.\ Estende\ AbstractCrudController\ para\ reuso\ de\ l\u00F3gica.\r\n
comment1.params=
comment1.target=AutorController()
comment1.text=\r\n\ Construtor\ padr\u00E3o.\r\n
comment10.params=disable
comment10.target=void\ setFieldsDisable(boolean)
comment10.text=\r\n\ Habilita\ ou\ desabilita\ os\ campos\ de\ entrada\ da\ interface\ (exceto\ o\ ID).\r\n\ @param\ disable\ true\ para\ desabilitar,\ false\ para\ habilitar.\r\n
comment11.params=
comment11.target=java.lang.Integer\ getIdFromField()
comment11.text=\r\n\ Obt\u00E9m\ o\ ID\ do\ campo\ de\ texto\ ID\ e\ o\ converte\ para\ Integer.\r\n\ @return\ O\ ID\ como\ Integer,\ ou\ null\ se\ o\ campo\ estiver\ vazio.\r\n
comment12.params=
comment12.target=boolean\ validateInput()
comment12.text=\r\n\ Valida\ os\ campos\ de\ entrada\ do\ Autor.\r\n\ @return\ true\ se\ a\ entrada\ for\ v\u00E1lida,\ false\ caso\ contr\u00E1rio.\r\n
comment13.params=
comment13.target=java.lang.String\ getEntityName()
comment13.text=\r\n\ Retorna\ o\ nome\ da\ entidade\ para\ uso\ em\ mensagens\ de\ alerta.\r\n\ @return\ "Autor".\r\n
comment2.params=
comment2.target=model.Repositorio\ getRepositorio()
comment2.text=\r\n\ Retorna\ a\ inst\u00E2ncia\ do\ reposit\u00F3rio\ de\ Autor.\r\n\ @return\ O\ Repositorio\ de\ Autor.\r\n
comment3.params=
comment3.target=void\ setupTableColumns()
comment3.text=\r\n\ Configura\ as\ colunas\ da\ TableView\ para\ exibir\ os\ dados\ do\ Autor.\r\n
comment4.params=
comment4.target=javafx.collections.ObservableList\ loadAllEntities()
comment4.text=\r\n\ Carrega\ todos\ os\ Autores\ do\ banco\ de\ dados\ e\ os\ converte\ para\ objetos\ de\ view.Autor.\r\n\ @return\ Uma\ ObservableList\ de\ view.Autor\ para\ a\ TableView.\r\n
comment5.params=modelEntity
comment5.target=view.Autor\ modelToView(model.Autor)
comment5.text=\r\n\ Converte\ um\ objeto\ model.Autor\ para\ um\ objeto\ view.Autor.\r\n\ @param\ modelEntity\ O\ objeto\ model.Autor\ a\ ser\ convertido.\r\n\ @return\ O\ objeto\ view.Autor\ correspondente.\r\n
comment6.params=viewEntity
comment6.target=model.Autor\ viewToModel(view.Autor)
comment6.text=\r\n\ Converte\ um\ objeto\ view.Autor\ para\ um\ objeto\ model.Autor.\r\n\ Se\ o\ ID\ for\ maior\ que\ 0,\ ele\ \u00E9\ setado\ na\ entidade\ do\ modelo,\ indicando\ uma\ atualiza\u00E7\u00E3o.\r\n\ @param\ viewEntity\ O\ objeto\ view.Autor\ a\ ser\ convertido.\r\n\ @return\ O\ objeto\ model.Autor\ correspondente.\r\n
comment7.params=
comment7.target=model.Autor\ getEntityFromFields()
comment7.text=\r\n\ Cria\ (ou\ atualiza)\ um\ objeto\ model.Autor\ a\ partir\ dos\ campos\ da\ interface.\r\n\ Utilizado\ nas\ opera\u00E7\u00F5es\ de\ salvar\ (adicionar/atualizar).\r\n\ @return\ O\ objeto\ model.Autor\ com\ os\ dados\ dos\ campos.\r\n
comment8.params=viewEntity
comment8.target=void\ populateFields(view.Autor)
comment8.text=\r\n\ Preenche\ os\ campos\ da\ interface\ com\ os\ dados\ de\ um\ objeto\ view.Autor.\r\n\ Chamado\ ao\ selecionar\ um\ item\ na\ tabela.\r\n\ @param\ viewEntity\ O\ objeto\ view.Autor\ cujos\ dados\ preencher\u00E3o\ os\ campos.\r\n
comment9.params=
comment9.target=void\ clearFields()
comment9.text=\r\n\ Limpa\ todos\ os\ campos\ de\ entrada\ da\ interface.\r\n
numComments=14
